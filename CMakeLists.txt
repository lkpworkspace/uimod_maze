CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(uimod_maze)

#### compile setting
SET(CMAKE_C_STANDARD 11)
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_C_FLGAS "-fPIC -DPIC")
SET(CMAKE_CXX_FLGAS "-fPIC -DPIC")

#### path setting
SET(CMAKE_INSTALL_PREFIX "/")
SET(SF_ROOT /opt/SoftwareFactory/)
SET(SF_INSTALL_ASSETS_DIR ${SF_ROOT}/assets)
SET(SF_INSTALL_CONF_DIR ${SF_ROOT}/conf)
SET(SF_INSTALL_LIB_DIR ${SF_ROOT}/lib)
SET(SF_INSTALL_BIN_DIR ${SF_ROOT}/bin)
SET(SF_INSTALL_INC_DIR ${SF_ROOT}/inc)

#### dep 3rd lib
FIND_PACKAGE(jsoncpp REQUIRED)
FIND_PACKAGE(gflags REQUIRED)
FIND_PACKAGE(Protobuf REQUIRED)
FIND_PACKAGE(GTest REQUIRED)
FIND_PACKAGE(SDL2 REQUIRED)

#### include directory
INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SF_ROOT}/inc)
INCLUDE_DIRECTORIES(com)

#### lib path
LINK_DIRECTORIES(${SF_ROOT}/lib)
LINK_LIBRARIES(glog gflags jsoncpp dl pthread protobuf)

#### genrate mod lib
ADD_LIBRARY(${PROJECT_NAME} SHARED
    com/${PROJECT_NAME}.cpp
)
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
    bppb
)

#### install
INSTALL(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${SF_INSTALL_LIB_DIR}
    ARCHIVE DESTINATION ${SF_INSTALL_LIB_DIR}
    RUNTIME DESTINATION ${SF_INSTALL_BIN_DIR}
)
FILE(GLOB conf_files "conf/*.json")
INSTALL(FILES 
    ${conf_files}
    PERMISSIONS
    OWNER_READ
    GROUP_READ
    WORLD_READ
    DESTINATION ${SF_INSTALL_CONF_DIR}
)